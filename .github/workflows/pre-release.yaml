on:
  push:
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10
name: Create prerelease w/ binaries and static assets
jobs:
  build-static:
    name: Build static assets
    runs-on: ubuntu-latest
    steps:
      - name: Get tag name
        id: tag_name
        run: |
          tag=${GITHUB_TAG/refs\/tags\//}
          echo ::set-output name=tag::$tag
        env:
          GITHUB_TAG: ${{ github.ref }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18
      - name: Build and zip static folder
        run: |
          mkdir -p ./release/static
          cd dashboard
          npm i --production=false --legacy-peer-deps
          npm run build
          cd ..
          zip --junk-paths ./release/static/hatchet-static_${{steps.tag_name.outputs.tag}}.zip ./dashboard/build/*
        env:
          NODE_ENV: production
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Upload static binaries
        uses: actions/upload-artifact@v2
        with:
          path: ./release/static
          name: static-binaries
          retention-days: 1
  release:
    name: Create release and upload assets
    runs-on: ubuntu-latest
    needs:
      - build-static
    steps:
      - name: Get tag name
        id: tag_name
        run: |
          tag=${GITHUB_TAG/refs\/tags\//}
          echo ::set-output name=tag::$tag
        env:
          GITHUB_TAG: ${{ github.ref }}
      - name: Download static assets
        uses: actions/download-artifact@v2
        with:
          name: static-binaries
          path: release/static
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: true
      - name: Upload static assets
        id: upload-static-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TAG: ${{ github.ref }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/static/static_${{steps.tag_name.outputs.tag}}.zip
          asset_name: static_${{steps.tag_name.outputs.tag}}.zip
          asset_content_type: application/zip